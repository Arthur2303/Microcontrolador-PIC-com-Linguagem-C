/*Para isso foi solicitado o desenvolvimento um aparelho  "contador de fluxo". Esse aparelho deve ser operado por uma pessoa que deve selecionar o semáforo (de 0 a 4) e 
pressionar um botão para incrementar em uma unidade quantos veículos passaram pelo semáforo selecionado. A contagem deve ser armazenada na EEPROM para que não ocorram perdas 
por falta de bateria ou desligamento acidental.
Os botões RB0 e RB1 devem ser utilizados selecionar o semáforo entre as opções de 0 à 4, onde o RB0 move a seleção para o semáforo anterior, caso seja maior que zero, e o RB1
move a seleção para o semáforo seguinte, caso seja menor que 4.
O semáforo selecionado deve ser indicado pelos LEDs B3 à B7 . Assim quando, por exemplo, semáforo 0 for selecionado o LED B3 fica aceso e os outros 4 apagados.
O botão RB2 deve ser utilizado para incrementar o valor da contagem de fluxo de veículos do semáforo selecionado, devendo a contagem sempre iniciar com 0.
O resultado da contagem deve ser salvo na memória EEPROM do chip no mesmo endereço indicado pela seleção do semáforo. Então quando o semáforo 0 for selecionado a contagem 
referente a ele deve ser salva na posição 0 da EEPROM; quando o semáforo 1 for selecionado a contagem referente a ele deve ser salva na posição 1 da EEPROM, e assim por diante.
Sempre que um semáforo for selecionado sua contagem deve ser apresentada no Display LCD. Considere que o valor máximo da contagem por semáforo será 200.
*/
#include <18F4550.h>
#fuses HS, NOWDT, MCLR
#use delay(clock=20MHz)

#define LCD_DB0   PIN_D0
#define LCD_DB1   PIN_D1
#define LCD_DB2   PIN_D2
#define LCD_DB3   PIN_D3
#define LCD_DB4   PIN_D4
#define LCD_DB5   PIN_D5
#define LCD_DB6   PIN_D6
#define LCD_DB7   PIN_D7
#define LCD_E     PIN_E1
#define LCD_RS    PIN_E2

#include <flex_lcd.c>

int semaforoSelecionado = 0; 

void mostrarContagem(int semaforo) {
   unsigned int contagem = read_eeprom(semaforo);
   
   //O semáforo selecionado e a contagem nele serão apresentados no Display LCD.
   printf(LCD_PUTC, "\fSemaforo %i", semaforo);
   printf(LCD_PUTC, "\nContagem %i", contagem);
}

/*Esta função recebe como parâmetro qual o semáforo, e consequentemente qual a
   posição na EEPROM devemos incrementar.*/
void incrementar(int semaforo) {
   /*Primeiramente é lido o valor existente na posição da EEPROM para uma 
      variável auxilizar aqui definida como contagem.*/
   unsigned int contagem = read_eeprom(semaforo);
   
   contagem++;
   /*Por fim salvamos o novo valor da variável auxiliar na mesma posição da
      EEPROM de obtemos o valor anterior caso o valor seja menor que 200.*/
   if (contagem < 200) {
      write_eeprom(semaforo, contagem);
      delay_ms(10);
   }
   mostrarContagem(semaforoSelecionado);
}

void main () {

   lcd_init();    
   
   /* Inicializa as 5 primeiras posições da EEPROM com o valor zero caso sejam 
      255.*/
   for (int i = 0; i < 5; i++) {
      unsigned int leitura = read_eeprom(i);
      if (leitura == 255) {
         write_eeprom(i, 0);
         delay_ms(10);
      }
   }
   /* Mostra semáforo selecionado a partir do bit 3 da porta B. Os bits 
      iniciais, 0 1 e 2, estão sendo utilizados pelos botões.*/
   output_bit(PIN_B3 + semaforoSelecionado, 1);
   
   mostrarContagem(semaforoSelecionado);
   
   while(true) {
   
      /* Ao pressionar o botão RB0 decrementa a variável auxiliar 
         semaforoSelecionado case ela seja maior que zero.*/
      if ( input(PIN_B0)  == 0 ) {
         if (semaforoSelecionado > 0) {
            semaforoSelecionado--;
         }
         /*Após decrementar a variável semaforoSelecionado zera os bits
            da porta B de 3 à 7.*/
         for (int i = 0; i < 5; i++) {
            output_bit(PIN_B3 + i, 0);
         }
                  
         /* Para acender apenas o LED correto de acordo com o semáforo selecionado somamos o valor da posição do primeiro bit (PIN_B3) com
            o semaforoSelecionado. Isso funciona porque as constantes PIN_B3 à PIN_B7 são valores inteiros linerares iniciando em PIN_B0 com o 
            valor 31755 e aumentando em uma unidade a para PIN_B4, PIN_B5 etc.*/
         output_bit(PIN_B3 + semaforoSelecionado, 1);
         
         mostrarContagem(semaforoSelecionado);
         
         while (input(PIN_B0)  == 0);
      }
      
      // Idem à explicação anterior para o PIN_B0.
      if ( input(PIN_B1)  == 0 ) {
         if (semaforoSelecionado < 4) {
            semaforoSelecionado++;
         }
         
         for (int i = 0; i < 5; i++) {
            output_bit(PIN_B3 + i, 0);
         }
         
         output_bit(PIN_B3 + semaforoSelecionado, 1);
         
         mostrarContagem(semaforoSelecionado);
         
         while (input(PIN_B1)  == 0);
      }
      /* Ao pressionar o botão RB2 chamamos a função incrementar passando como
         parâmetro o semaforoSelecionado. Assim a função se encarrega de 
         realizar o incremento do valor no devido endereço da EEPROM.*/
      if (input(PIN_B2)  == 0 ) {         
         incrementar (semaforoSelecionado);
         while (input(PIN_B2)  == 0);
      }
   }
}
